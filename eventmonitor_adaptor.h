/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp eventmonitor.xml -p eventmonitor_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef EVENTMONITOR_ADAPTOR_H
#define EVENTMONITOR_ADAPTOR_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.deepin.dde.digitalWellbeing
 */
class OrgDeepinDdeDigitalWellbeingInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.deepin.dde.digitalWellbeing"; }

public:
    OrgDeepinDdeDigitalWellbeingInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgDeepinDdeDigitalWellbeingInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> testSlot(const QString &s)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(s);
        return asyncCallWithArgumentList(QStringLiteral("testSlot"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void activeApplicationNameChanged(const QString &in0);
};

namespace org {
  namespace deepin {
    namespace dde {
      typedef ::OrgDeepinDdeDigitalWellbeingInterface digitalWellbeing;
    }
  }
}
#endif
